import streamlit as st
import pandas as pd
from app import data_loader, preprocessing, sentiment_analyzer, trend_forecaster, visualizer

analyzer = sentiment_analyzer.MultiLangSentimentAnalyzer()
forecaster = trend_forecaster.TrendForecaster()

st.title("üìà –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–Ω–¥–æ–≤")
st.markdown("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª")

query = st.text_input("–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å", "–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç")

if st.button("–°–æ–±—Ä–∞—Ç—å –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
    df = data_loader.load_tweets(query, 300)
    df['clean'] = df['text'].apply(preprocessing.clean_text).apply(preprocessing.lemmatize_text)
    sentiments = analyzer.batch_predict(df['clean'])
    df_sent = pd.DataFrame(sentiments)
    df_final = pd.concat([df, df_sent], axis=1)

    st.subheader("üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π")
    st.plotly_chart(visualizer.plot_sentiment_distribution(df_final))

    st.subheader("‚è≥ –ü—Ä–æ–≥–Ω–æ–∑ —Ç—Ä–µ–Ω–¥–æ–≤")
    ts_data = forecaster.prepare_data(df)
    forecast = forecaster.fit_and_predict(ts_data)
    st.plotly_chart(visualizer.plot_forecast(forecast))

    st.download_button("üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (CSV)", df_final.to_csv(index=False), file_name="results.csv")
